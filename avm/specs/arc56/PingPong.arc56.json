{
    "name": "PingPong",
    "structs": {},
    "methods": [
        {
            "name": "create",
            "args": [
                {
                    "type": "uint64",
                    "name": "wormhole_core"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_emitter_lsig",
            "args": [
                {
                    "type": "address",
                    "name": "emitter_lsig"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "ping",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "receive_message",
            "args": [
                {
                    "type": "appl",
                    "name": "verify_vaa"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 1,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "wormhole_core": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "d29ybWhvbGVfY29yZQ=="
                },
                "emitter_lsig": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "ZW1pdHRlcl9sc2ln"
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        312
                    ],
                    "errorMessage": "Address length is 32 bytes"
                },
                {
                    "pc": [
                        118
                    ],
                    "errorMessage": "Incorrect app on completion"
                },
                {
                    "pc": [
                        135
                    ],
                    "errorMessage": "Incorrect method"
                },
                {
                    "pc": [
                        91,
                        228,
                        241,
                        255
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        211
                    ],
                    "errorMessage": "Unknown payload"
                },
                {
                    "pc": [
                        113
                    ],
                    "errorMessage": "Unknown wormhole core"
                },
                {
                    "pc": [
                        278
                    ],
                    "errorMessage": "Wormhole core address unknown"
                },
                {
                    "pc": [
                        296
                    ],
                    "errorMessage": "Wormhole message fee is unknown"
                },
                {
                    "pc": [
                        259
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        94,
                        231,
                        244
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        306
                    ],
                    "errorMessage": "check self.emitter_lsig exists"
                },
                {
                    "pc": [
                        111,
                        275,
                        282,
                        300
                    ],
                    "errorMessage": "check self.wormhole_core exists"
                },
                {
                    "pc": [
                        104
                    ],
                    "errorMessage": "transaction type is appl"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAAEGBSYEDXdvcm1ob2xlX2NvcmUEcGluZwRwb25nDGVtaXR0ZXJfbHNpZzEbQQAjggQEJA0vZwR3OWx+BBiLj7QEb9bIdDYaAI4EAKYAmACLAAIiQzEZFEQxGEQxFiMJSTgQJBJESTgYIihlRBJESTgZFERJIsIagAl2ZXJpZnlWQUESRCPCGkklVYFCCyMIJQhLARVLAksCSwJSAgJPAoEICEsDSwFZTIECCEsESwGBIFhMgSkITwVMTwVSTwOwTwIWsEywKSpPAo4CAAcAAQApiAA1I0MqiAAvQv/3MRkURDEYRCmIACEjQzEZFEQxGEQrNhoBZyNDMRkURDEYFEQ2GgEXKExnI0OKAQAiKGVEcghEIihlRIAKTWVzc2FnZUZlZWVEIihlRCIWIitlREkVgSASRLFPA7IITwOyByOyECKyAbayHIAOcHVibGlzaE1lc3NhZ2WyGov/shqyGrIYJLIQIrIBs4v/sIk=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 4,
            "patch": 2
        }
    },
    "events": [],
    "templateVariables": {}
}